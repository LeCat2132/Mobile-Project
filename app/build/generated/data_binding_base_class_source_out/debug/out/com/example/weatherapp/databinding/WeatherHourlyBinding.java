// Generated by view binder compiler. Do not edit!
package com.example.weatherapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.wear.widget.SwipeDismissFrameLayout;
import com.airbnb.lottie.LottieAnimationView;
import com.example.weatherapp.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class WeatherHourlyBinding implements ViewBinding {
  @NonNull
  private final SwipeDismissFrameLayout rootView;

  @NonNull
  public final MaterialCardView cardView;

  @NonNull
  public final AppCompatTextView dayNameTextView;

  @NonNull
  public final SwipeDismissFrameLayout draggableFrame;

  @NonNull
  public final LottieAnimationView hourlyAnimationView;

  @NonNull
  public final AppCompatTextView maxTempTextView;

  @NonNull
  public final AppCompatTextView minTempTextView;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final TextView txtSunrise;

  @NonNull
  public final TextView txtSunset;

  private WeatherHourlyBinding(@NonNull SwipeDismissFrameLayout rootView,
      @NonNull MaterialCardView cardView, @NonNull AppCompatTextView dayNameTextView,
      @NonNull SwipeDismissFrameLayout draggableFrame,
      @NonNull LottieAnimationView hourlyAnimationView, @NonNull AppCompatTextView maxTempTextView,
      @NonNull AppCompatTextView minTempTextView, @NonNull RecyclerView recyclerView,
      @NonNull TextView txtSunrise, @NonNull TextView txtSunset) {
    this.rootView = rootView;
    this.cardView = cardView;
    this.dayNameTextView = dayNameTextView;
    this.draggableFrame = draggableFrame;
    this.hourlyAnimationView = hourlyAnimationView;
    this.maxTempTextView = maxTempTextView;
    this.minTempTextView = minTempTextView;
    this.recyclerView = recyclerView;
    this.txtSunrise = txtSunrise;
    this.txtSunset = txtSunset;
  }

  @Override
  @NonNull
  public SwipeDismissFrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static WeatherHourlyBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static WeatherHourlyBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.weather_hourly, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static WeatherHourlyBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.card_view;
      MaterialCardView cardView = ViewBindings.findChildViewById(rootView, id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.day_name_text_view;
      AppCompatTextView dayNameTextView = ViewBindings.findChildViewById(rootView, id);
      if (dayNameTextView == null) {
        break missingId;
      }

      SwipeDismissFrameLayout draggableFrame = (SwipeDismissFrameLayout) rootView;

      id = R.id.hourly_animation_view;
      LottieAnimationView hourlyAnimationView = ViewBindings.findChildViewById(rootView, id);
      if (hourlyAnimationView == null) {
        break missingId;
      }

      id = R.id.max_temp_text_view;
      AppCompatTextView maxTempTextView = ViewBindings.findChildViewById(rootView, id);
      if (maxTempTextView == null) {
        break missingId;
      }

      id = R.id.min_temp_text_view;
      AppCompatTextView minTempTextView = ViewBindings.findChildViewById(rootView, id);
      if (minTempTextView == null) {
        break missingId;
      }

      id = R.id.recycler_view;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.txtSunrise;
      TextView txtSunrise = ViewBindings.findChildViewById(rootView, id);
      if (txtSunrise == null) {
        break missingId;
      }

      id = R.id.txtSunset;
      TextView txtSunset = ViewBindings.findChildViewById(rootView, id);
      if (txtSunset == null) {
        break missingId;
      }

      return new WeatherHourlyBinding((SwipeDismissFrameLayout) rootView, cardView, dayNameTextView,
          draggableFrame, hourlyAnimationView, maxTempTextView, minTempTextView, recyclerView,
          txtSunrise, txtSunset);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
