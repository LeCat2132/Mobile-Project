// Generated by view binder compiler. Do not edit!
package com.example.weatherapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.weatherapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CardView bgColor;

  @NonNull
  public final ImageView imgDesc;

  @NonNull
  public final TextView txtDay;

  @NonNull
  public final TextView txtMaxTemp;

  @NonNull
  public final TextView txtMinTemp;

  @NonNull
  public final TextView txtSunrise;

  @NonNull
  public final TextView txtSunset;

  private ItemBinding(@NonNull LinearLayout rootView, @NonNull CardView bgColor,
      @NonNull ImageView imgDesc, @NonNull TextView txtDay, @NonNull TextView txtMaxTemp,
      @NonNull TextView txtMinTemp, @NonNull TextView txtSunrise, @NonNull TextView txtSunset) {
    this.rootView = rootView;
    this.bgColor = bgColor;
    this.imgDesc = imgDesc;
    this.txtDay = txtDay;
    this.txtMaxTemp = txtMaxTemp;
    this.txtMinTemp = txtMinTemp;
    this.txtSunrise = txtSunrise;
    this.txtSunset = txtSunset;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bgColor;
      CardView bgColor = ViewBindings.findChildViewById(rootView, id);
      if (bgColor == null) {
        break missingId;
      }

      id = R.id.imgDesc;
      ImageView imgDesc = ViewBindings.findChildViewById(rootView, id);
      if (imgDesc == null) {
        break missingId;
      }

      id = R.id.txtDay;
      TextView txtDay = ViewBindings.findChildViewById(rootView, id);
      if (txtDay == null) {
        break missingId;
      }

      id = R.id.txtMaxTemp;
      TextView txtMaxTemp = ViewBindings.findChildViewById(rootView, id);
      if (txtMaxTemp == null) {
        break missingId;
      }

      id = R.id.txtMinTemp;
      TextView txtMinTemp = ViewBindings.findChildViewById(rootView, id);
      if (txtMinTemp == null) {
        break missingId;
      }

      id = R.id.txtSunrise;
      TextView txtSunrise = ViewBindings.findChildViewById(rootView, id);
      if (txtSunrise == null) {
        break missingId;
      }

      id = R.id.txtSunset;
      TextView txtSunset = ViewBindings.findChildViewById(rootView, id);
      if (txtSunset == null) {
        break missingId;
      }

      return new ItemBinding((LinearLayout) rootView, bgColor, imgDesc, txtDay, txtMaxTemp,
          txtMinTemp, txtSunrise, txtSunset);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
